{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "src/NotificationListItem.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "<h3 class=\"comment-api-title\">Overview</h3> The <code>ui5-li-notification</code> is a type of list item, meant to display notifications. <br> The component has a rich set of various properties that allows the user to set <code>avatar</code>, <code>titleText</code>, descriptive <code>content</code> and <code>footnotes</code> to fully describe a notification. <br> The user can: <ul> <li>display a <code>Close</code> button</li> <li>can control whether the <code>titleText</code> and <code>description</code> should wrap or truncate and display a <code>ShowMore</code> button to switch between less and more information</li> <li>add custom actions by using the <code>ui5-notification-action</code> component</li> </ul> <h3>Usage</h3> The component can be used in a standard <code>ui5-list</code>. <h3>CSS Shadow Parts</h3> <ui5-link target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/::part\">CSS Shadow Parts</ui5-link> allow developers to style elements inside the Shadow DOM. <br> The <code>ui5-li-notification</code> exposes the following CSS Shadow Parts: <ul> <li>title-text - Used to style the titleText of the notification list item</li> </ul> <h3>ES6 Module Import</h3> <code>import \"@ui5/webcomponents/dist/NotificationListItem.js\";</code> <br> <code>import \"@ui5/webcomponents/dist/NotificationAction.js\";</code> (optional)",
          "name": "NotificationListItem",
          "slots": [
            {
              "name": "avatar",
              "description": "Defines the avatar, displayed in the <code>ui5-li-notification</code>.\n\n<br><br>\n<b>Note:</b> Consider using the <code>ui5-avatar</code> to display icons, initials or images.\n<br>\n<b>Note:</b>In order to be complaint with the UX guidlines and for best experience,\nwe recommend using avatars with 2rem X 2rem in size (32px X 32px). In case you are using the <code>ui5-avatar</code>\nyou can set its <code>size</code> property to <code>XS</code> to get the required size - <code>&lt;ui5-avatar size=\"XS\">&lt;/ui5-avatar></code>.",
              "_ui5type": {
                "text": "Array<IAvatar>",
                "references": [
                  {
                    "name": "IAvatar",
                    "package": "@ui5/webcomponents",
                    "module": "dist/Avatar.js"
                  }
                ]
              },
              "_ui5privacy": "public"
            },
            {
              "name": "default",
              "description": "Defines the content of the <code>ui5-li-notification</code>,\nusually a description of the notification.\n\n<br><br>\n<b>Note:</b> Although this slot accepts HTML Elements, it is strongly recommended that you only use text in order to preserve the intended design.",
              "_ui5type": {
                "text": "Array<Node>"
              },
              "_ui5privacy": "public"
            },
            {
              "name": "footnotes",
              "description": "Defines the elements, displayed in the footer of the of the component.",
              "_ui5type": {
                "text": "Array<HTMLElement>"
              },
              "_ui5privacy": "public"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "_descOverflowHeight",
              "type": {
                "text": "number"
              },
              "default": "0"
            },
            {
              "kind": "method",
              "name": "_onclick",
              "description": "Event handlers"
            },
            {
              "kind": "method",
              "name": "_onkeydown",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "NotificationListItemBase",
                "module": "src/NotificationListItemBase.ts"
              }
            },
            {
              "kind": "method",
              "name": "_onkeyup",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "_onResizeBound",
              "type": {
                "text": "ResizeObserverCallback"
              }
            },
            {
              "kind": "method",
              "name": "_onShowMoreClick",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "_titleTextOverflowHeight",
              "type": {
                "text": "number"
              },
              "default": "0"
            },
            {
              "kind": "field",
              "name": "accInvisibleText",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "ariaLabelledBy",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "closeBtnAccessibleName",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "descriptionDOM",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "descriptionHeight",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "descriptionOverflows",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "fireItemPress",
              "description": "Private"
            },
            {
              "kind": "field",
              "name": "footerItems",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "hasDesc",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "hasFootNotes",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "hideShowMore",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "onEnterDOM"
            },
            {
              "kind": "method",
              "name": "onExitDOM"
            },
            {
              "kind": "method",
              "name": "onResize"
            },
            {
              "kind": "field",
              "name": "overflowBtnAccessibleName",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "priorityText",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "showMoreText",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "titleTextDOM",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "titleTextHeight",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "titleTextOverflows",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "wrappingType",
              "type": {
                "text": "WrappingType",
                "references": [
                  {
                    "name": "WrappingType",
                    "package": "@ui5/webcomponents",
                    "module": "dist/types/WrappingType.js"
                  }
                ]
              },
              "description": "Defines if the <code>titleText</code> and <code>description</code> should wrap,\nthey truncate by default.\n\n<br><br>\n<b>Note:</b> by default the <code>titleText</code> and <code>description</code>,\nand a <code>ShowMore/Less</code> button would be displayed.",
              "default": "\"None\"",
              "privacy": "public",
              "_ui5since": "1.0.0-rc.15"
            },
            {
              "kind": "method",
              "name": "_onBtnCloseClick",
              "description": "Event handlers",
              "inheritedFrom": {
                "name": "NotificationListItemBase",
                "module": "src/NotificationListItemBase.ts"
              }
            },
            {
              "kind": "method",
              "name": "_onBtnOverflowClick",
              "inheritedFrom": {
                "name": "NotificationListItemBase",
                "module": "src/NotificationListItemBase.ts"
              }
            },
            {
              "kind": "method",
              "name": "_onCustomActionClick",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "NotificationListItemBase",
                "module": "src/NotificationListItemBase.ts"
              }
            },
            {
              "kind": "field",
              "name": "actionsInfo",
              "readonly": true,
              "inheritedFrom": {
                "name": "NotificationListItemBase",
                "module": "src/NotificationListItemBase.ts"
              }
            },
            {
              "kind": "field",
              "name": "busy",
              "type": {
                "text": "boolean"
              },
              "description": "Defines if a busy indicator would be displayed over the item.",
              "default": "false",
              "privacy": "public",
              "_ui5since": "1.0.0-rc.8",
              "inheritedFrom": {
                "name": "NotificationListItemBase",
                "module": "src/NotificationListItemBase.ts"
              }
            },
            {
              "kind": "field",
              "name": "busyDelay",
              "type": {
                "text": "number"
              },
              "description": "Defines the delay in milliseconds, after which the busy indicator will show up for this component.",
              "default": "1000",
              "privacy": "public",
              "inheritedFrom": {
                "name": "NotificationListItemBase",
                "module": "src/NotificationListItemBase.ts"
              }
            },
            {
              "kind": "method",
              "name": "closeOverflow",
              "inheritedFrom": {
                "name": "NotificationListItemBase",
                "module": "src/NotificationListItemBase.ts"
              }
            },
            {
              "kind": "method",
              "name": "getActionByID",
              "parameters": [
                {
                  "name": "id",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "NotificationListItemBase",
                "module": "src/NotificationListItemBase.ts"
              }
            },
            {
              "kind": "method",
              "name": "getOverflowPopover",
              "inheritedFrom": {
                "name": "NotificationListItemBase",
                "module": "src/NotificationListItemBase.ts"
              }
            },
            {
              "kind": "field",
              "name": "hasPriority",
              "readonly": true,
              "inheritedFrom": {
                "name": "NotificationListItemBase",
                "module": "src/NotificationListItemBase.ts"
              }
            },
            {
              "kind": "field",
              "name": "hasTitleText",
              "readonly": true,
              "inheritedFrom": {
                "name": "NotificationListItemBase",
                "module": "src/NotificationListItemBase.ts"
              }
            },
            {
              "kind": "field",
              "name": "i18nFioriBundle",
              "type": {
                "text": "I18nBundle"
              },
              "static": true,
              "inheritedFrom": {
                "name": "NotificationListItemBase",
                "module": "src/NotificationListItemBase.ts"
              }
            },
            {
              "kind": "method",
              "name": "onDefine",
              "static": true,
              "inheritedFrom": {
                "name": "NotificationListItemBase",
                "module": "src/NotificationListItemBase.ts"
              }
            },
            {
              "kind": "method",
              "name": "openOverflow",
              "inheritedFrom": {
                "name": "NotificationListItemBase",
                "module": "src/NotificationListItemBase.ts"
              }
            },
            {
              "kind": "field",
              "name": "overflowActions",
              "readonly": true,
              "inheritedFrom": {
                "name": "NotificationListItemBase",
                "module": "src/NotificationListItemBase.ts"
              }
            },
            {
              "kind": "field",
              "name": "overflowButtonDOM",
              "readonly": true,
              "inheritedFrom": {
                "name": "NotificationListItemBase",
                "module": "src/NotificationListItemBase.ts"
              }
            },
            {
              "kind": "field",
              "name": "priority",
              "type": {
                "text": "Priority",
                "references": [
                  {
                    "name": "Priority",
                    "package": "@ui5/webcomponents",
                    "module": "dist/types/Priority.js"
                  }
                ]
              },
              "description": "Defines the <code>priority</code> of the item.",
              "default": "\"None\"",
              "privacy": "public",
              "inheritedFrom": {
                "name": "NotificationListItemBase",
                "module": "src/NotificationListItemBase.ts"
              }
            },
            {
              "kind": "field",
              "name": "priorityIcon",
              "readonly": true,
              "inheritedFrom": {
                "name": "NotificationListItemBase",
                "module": "src/NotificationListItemBase.ts"
              }
            },
            {
              "kind": "field",
              "name": "read",
              "type": {
                "text": "boolean"
              },
              "description": "Defines if the <code>notification</code> is new or has been already read.\n<br><br>\n<b>Note:</b> if set to <code>false</code> the <code>titleText</code> has bold font,\nif set to true - it has a normal font.",
              "default": "false",
              "privacy": "public",
              "inheritedFrom": {
                "name": "NotificationListItemBase",
                "module": "src/NotificationListItemBase.ts"
              }
            },
            {
              "kind": "field",
              "name": "showClose",
              "type": {
                "text": "boolean"
              },
              "description": "Defines if the <code>close</code> button would be displayed.",
              "default": "false",
              "privacy": "public",
              "inheritedFrom": {
                "name": "NotificationListItemBase",
                "module": "src/NotificationListItemBase.ts"
              }
            },
            {
              "kind": "field",
              "name": "showOverflow",
              "readonly": true,
              "inheritedFrom": {
                "name": "NotificationListItemBase",
                "module": "src/NotificationListItemBase.ts"
              }
            },
            {
              "kind": "field",
              "name": "standardActions",
              "readonly": true,
              "inheritedFrom": {
                "name": "NotificationListItemBase",
                "module": "src/NotificationListItemBase.ts"
              }
            },
            {
              "kind": "field",
              "name": "titleText",
              "type": {
                "text": "string"
              },
              "description": "Defines the <code>titleText</code> of the item.",
              "default": "\"\"",
              "privacy": "public",
              "inheritedFrom": {
                "name": "NotificationListItemBase",
                "module": "src/NotificationListItemBase.ts"
              }
            }
          ],
          "superclass": {
            "name": "NotificationListItemBase",
            "module": "/src/NotificationListItemBase.js"
          },
          "tagName": "ui5-li-notification",
          "customElement": true,
          "_ui5since": "1.0.0-rc.8",
          "_ui5privacy": "public",
          "events": [
            {
              "name": "close",
              "_ui5privacy": "public",
              "type": {
                "text": "CustomEvent"
              },
              "description": "Fired when the <code>Close</code> button is pressed.",
              "inheritedFrom": {
                "name": "NotificationListItemBase",
                "module": "src/NotificationListItemBase.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "NotificationListItem",
            "module": "src/NotificationListItem.ts"
          }
        },
        {
          "kind": "js",
          "name": "NotificationListItemCloseEventDetail",
          "declaration": {
            "name": "NotificationListItemCloseEventDetail",
            "module": "src/NotificationListItem.ts"
          }
        },
        {
          "kind": "js",
          "name": "NotificationListItemPressEventDetail",
          "declaration": {
            "name": "NotificationListItemPressEventDetail",
            "module": "src/NotificationListItem.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/NotificationListItemBase.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "The base class of the <code>NotificationListItem</code> and <code>NotificationListGroupItem</code>.",
          "name": "NotificationListItemBase",
          "slots": [
            {
              "name": "actions",
              "description": "Defines the actions, displayed in the top-right area.\n<br><br>\n<b>Note:</b> use the <code>ui5-notification-action</code> component.",
              "_ui5type": {
                "text": "Array<INotificationAction>",
                "references": [
                  {
                    "name": "INotificationAction",
                    "package": "@ui5/webcomponents-fiori",
                    "module": "dist/Interfaces.js"
                  }
                ]
              },
              "_ui5privacy": "public"
            }
          ],
          "members": [
            {
              "kind": "method",
              "name": "_onBtnCloseClick",
              "description": "Event handlers"
            },
            {
              "kind": "method",
              "name": "_onBtnOverflowClick"
            },
            {
              "kind": "method",
              "name": "_onCustomActionClick",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_onkeydown",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "actionsInfo",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "busy",
              "type": {
                "text": "boolean"
              },
              "description": "Defines if a busy indicator would be displayed over the item.",
              "default": "false",
              "privacy": "public",
              "_ui5since": "1.0.0-rc.8"
            },
            {
              "kind": "field",
              "name": "busyDelay",
              "type": {
                "text": "number"
              },
              "description": "Defines the delay in milliseconds, after which the busy indicator will show up for this component.",
              "default": "1000",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "closeOverflow"
            },
            {
              "kind": "method",
              "name": "getActionByID",
              "parameters": [
                {
                  "name": "id",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getOverflowPopover"
            },
            {
              "kind": "field",
              "name": "hasPriority",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "hasTitleText",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "i18nFioriBundle",
              "type": {
                "text": "I18nBundle"
              },
              "static": true
            },
            {
              "kind": "method",
              "name": "onDefine",
              "static": true
            },
            {
              "kind": "method",
              "name": "openOverflow"
            },
            {
              "kind": "field",
              "name": "overflowActions",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "overflowButtonDOM",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "priority",
              "type": {
                "text": "Priority",
                "references": [
                  {
                    "name": "Priority",
                    "package": "@ui5/webcomponents",
                    "module": "dist/types/Priority.js"
                  }
                ]
              },
              "description": "Defines the <code>priority</code> of the item.",
              "default": "\"None\"",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "priorityIcon",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "read",
              "type": {
                "text": "boolean"
              },
              "description": "Defines if the <code>notification</code> is new or has been already read.\n<br><br>\n<b>Note:</b> if set to <code>false</code> the <code>titleText</code> has bold font,\nif set to true - it has a normal font.",
              "default": "false",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "showClose",
              "type": {
                "text": "boolean"
              },
              "description": "Defines if the <code>close</code> button would be displayed.",
              "default": "false",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "showOverflow",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "standardActions",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "titleText",
              "type": {
                "text": "string"
              },
              "description": "Defines the <code>titleText</code> of the item.",
              "default": "\"\"",
              "privacy": "public"
            }
          ],
          "events": [
            {
              "name": "close",
              "_ui5privacy": "public",
              "type": {
                "text": "CustomEvent"
              },
              "description": "Fired when the <code>Close</code> button is pressed."
            }
          ],
          "superclass": {
            "name": "ListItemBase",
            "package": "@ui5/webcomponents",
            "module": "dist/ListItemBase.js"
          },
          "customElement": true,
          "_ui5abstract": true,
          "_ui5since": "1.0.0-rc.8",
          "_ui5privacy": "public"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "NotificationListItemBase",
            "module": "src/NotificationListItemBase.ts"
          }
        },
        {
          "kind": "js",
          "name": "NotificationListItemBaseCloseEventDetail",
          "declaration": {
            "name": "NotificationListItemBaseCloseEventDetail",
            "module": "src/NotificationListItemBase.ts"
          }
        }
      ]
    }
  ]
}
